# create the Env class for environments

catch { Env destroy }

oo::class create Env {
    variable bindings outer_env
    constructor {parms args {outer {}}} {
        foreach p $parms a $args {
            my set $p $a
        }
        set outer_env $outer
    }
    method find {sym} {
        if {$sym in [dict keys $bindings]} {
            return [self]
        } else {
            if {$outer_env eq {}} {
                # no more environments to search
                return {}
            }
            return [$outer_env find $sym]
        }
    }
    method get {sym} {
        dict get $bindings $sym
    }
    method set {sym val} {
        dict set bindings $sym $val
    }
}

